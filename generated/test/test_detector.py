# coding: utf-8

"""
    api_platform

    This API exposes detectors for sensitive data in arbitrary string payloads.  # noqa: E501

    The version of the OpenAPI document: 0.0.1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.detector import Detector  # noqa: E501
from openapi_client.rest import ApiException

class TestDetector(unittest.TestCase):
    """Detector unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Detector
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.detector.Detector()  # noqa: E501
        if include_optional :
            return Detector(
                display_name = '0', 
                detector_type = 'NIGHTFALL_DETECTOR', 
                nightfall_detector = 'API_KEY', 
                regex = openapi_client.models.regex.Regex(
                    pattern = '0', 
                    is_case_sensitive = True, ), 
                word_list = openapi_client.models.word_list.WordList(
                    values = [
                        '0'
                        ], 
                    is_case_sensitive = True, ), 
                context_rules = [
                    openapi_client.models.context_rule.ContextRule(
                        regex = openapi_client.models.regex.Regex(
                            pattern = '0', 
                            is_case_sensitive = True, ), 
                        proximity = openapi_client.models.context_rule_proximity.ContextRule_proximity(
                            window_before = 56, 
                            window_after = 56, ), 
                        confidence_adjustment = openapi_client.models.context_rule_confidence_adjustment.ContextRule_confidenceAdjustment(
                            fixed_confidence = 'VERY_UNLIKELY', ), )
                    ], 
                exclusion_rules = [
                    openapi_client.models.exclusion_rule.ExclusionRule(
                        match_type = 'PARTIAL', 
                        exclusion_type = 'REGEX', 
                        regex = openapi_client.models.regex.Regex(
                            pattern = '0', 
                            is_case_sensitive = True, ), 
                        word_list = openapi_client.models.word_list.WordList(
                            values = [
                                '0'
                                ], 
                            is_case_sensitive = True, ), )
                    ]
            )
        else :
            return Detector(
        )

    def testDetector(self):
        """Test Detector"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
